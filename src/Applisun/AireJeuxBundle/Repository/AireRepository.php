<?php

namespace Applisun\AireJeuxBundle\Repository;

use Symfony\Component\DependencyInjection\ContainerInterface;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * AireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AireRepository extends \Doctrine\ORM\EntityRepository
{
    
    public function getAireByVille(ContainerInterface $container, $villeId, $page)
    {
        $maxperpage = $container->getParameter('maxperpage');
        
        $query = $this->getEntityManager()
		              ->createQuery('SELECT a FROM ApplisunAireJeuxBundle:Aire a WHERE a.ville = :id')
		              ->setParameter('id', $villeId)
                              ->setFirstResult(($page-1) * $maxperpage)
                              ->setMaxResults($maxperpage);
 
        return new Paginator($query);
    }
    
    public function getCountAireByVille($villeId)
    {
        $query = $this->getEntityManager()
		              ->createQuery('SELECT a FROM ApplisunAireJeuxBundle:Aire a WHERE a.ville = :id')
		              ->setParameter('id', $villeId);
        
        return count($query->getResult());
    }
    
    public function getAllAireByVille($villeId)
    {
        return $this->getEntityManager()
		              ->createQuery('SELECT a FROM ApplisunAireJeuxBundle:Aire a WHERE a.ville = :id')
		              ->setParameter('id', $villeId)->getResult();
    }
    
    /**
     * Get 5 highest rated aire
     *
     * @return array
     */
    public function getTopAires($limit = 5)
    {
    	$qb = $this->createQueryBuilder('a');

        $query = $qb
            ->select('a, v')
            ->leftJoin('a.votes', 'v')
            ->where('a.average IS NOT NULL')
            ->orderBy('a.average', 'DESC')
            ->setFirstResult(0)
            ->setMaxResults($limit)
            ->getQuery()
        ;

        return new Paginator($query, true);
    }
    
    /**
     * Get 5 newest aire
     *
     * @return array
     */
    public function getNewAires($limit = 5)
    {
    	$qb = $this->createQueryBuilder('a');

        $query = $qb
            ->select('a')
            ->orderBy('a.createdAt', 'DESC')
            ->setFirstResult(0)
            ->setMaxResults($limit)
            ->getQuery()
        ;

        return new Paginator($query, true);
    }
    
    /**
     * Get 5 more commented aire
     *
     * @return array
     */
    public function getMoreCommentedAires($limit = 5)
    {
        
        $qb = $this->createQueryBuilder('a');
        $qb->select('a','count(a.id) as nbr');
        $qb->join('a.comments', 'c');
        $qb->groupBy('a.id');
        $qb->orderBy('nbr', 'DESC');
        $results = $qb->getQuery()->getResult();
        $aires = array();
        foreach ($results as $result){
            $aires[] = $result[0];
        }        
        return $aires;
    }
    
    /**
     * Get aire near a position
     *
     * @return array
     */
    public function getNearAires($latitude, $longitude, $perimeter)
    {
        $query = $this->getEntityManager()
		              ->createQuery('SELECT a FROM ApplisunAireJeuxBundle:Aire a WHERE a.latitude between :lat-:perim and :lat+:perim and a.longitude between :lon-:perim and :lon+:perim')
		              ->setParameter('lat', $latitude)
                              ->setParameter('lon', $longitude)
                              ->setParameter('perim', $perimeter);
        
        return $query->getResult();
    }
    
}
